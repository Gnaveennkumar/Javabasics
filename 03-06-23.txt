=========
Chapter-3
=========

1) Arrays

2) Strings

3) StringBuffer

4) StringBuilder

5) Command Line Arguments




Variable ===> It is used to store the data

Datatype ===> It is used to specify type of the data

		
				// variable declaration
				int a ; 

				// variable intialization
				a = 20 ;

				int i = 45; // this is valid

				int b = 20, 30 ;    // this is in-valid (we can store only one value)


// store one student subject wise marks  (we need 6 variables for 6 subjects for one student)

int sub1 = 78;

int sub2 = 98;

int sub3 = 79;

int sub4 = 90;

int sub5 = 95;

int sub6 = 87;

// i want to store 50 students subject wise marks ( we need 300 variables to store all students marks)

=> This is not recommended because so many variables we have to create

=> To overcome this problem we can go for 'Arrays' concept

========
Arrays
========

-> It is a referenced/non primitive  data type

-> It is used to store multiple values

-> In Arrays, size is fixed ( we can't change the size in runtime )

-> Arrays supports only Homogenious elements (same type of elements)

Defination : Array is a container which is used to store collection of elements with same data type.


Syntax
----------

// Array Declaration
datatype [ ]  variableName;

dataype variableName [ ] ;

datatype  [ ]variableName ;


// Array Creation 
variableName = new datatype [ size ] ;


datatype[ ] variableName = new datatype [ size ] ;


Ex :      int[ ]  arr = new int [ 5 ];

Note: At the time of creating the array the size is mandatory

=> Array Size represents how many values we can store into Array

=> Array will store the data based on indexes

=> Array index always will start from zero (0)


class ArrayDemo {

	public static void main(String... args){

			int [ ]  arr  = new int [ 3 ] ;

			arr[0] = 100;
			arr[1] = 101;
			arr[2] = 102;
						
			System.out.println ( arr [ 0 ] ) ;
			System.out.println ( arr [ 1 ] ) ;
			System.out.println ( arr [ 2 ] ) ;
	}
}
------------------------------------------------------------------------------------

=> We can find size of the array using length property

class ArrayDemo {
	public static void main(String... args){

			int [ ]  arr  = new int [ 5 ] ;
			arr[0] = 100;
			arr[1] = 101;
			arr[2] = 102;
			
			System.out.println ( arr.length ) ;
	}
}

-------------------------------------------------------------------
class ArrayDemo {
	
    public static void main (String... args) {

			int arr[ ]  = new int [ 3 ] ;

			arr[0] = 100;
			arr[1] = 101;
			arr[2] = 102;

			for( int i = 0 ; i < arr.length ; i ++ ) {
					System.out.println ( arr [i] );
			}		
			
	}
}

------------------------------------------------

class ArrayDemo {

	public static void main(String... args) {

			boolean [ ]  arr  = new boolean [ 3 ] ;

			arr [2] = true;

			for( int i = 0 ; i < arr.length ; i ++ ) {
					System.out.println ( arr [i] );
			}
	}
}
---------------------------------------------------------------

class ArrayDemo {
	public static void main(String... args) {

			int arr [ ]  = { 101, 102, 103, 104 } ;	

			for ( int i = 0; i < arr.length; i++){
					System.out.println(arr[i]);
			}			
	}
}

------------------------------------------------------------------------------------------------------

class ArrayDemo {

	public static void main(String... args) {

			int arr [ ]  = { 101, 102, 103, 104 } ;	

			arr [ 0 ] = 200 ;	// it will update 0th index value from 101 to 200

			arr [ 1 ] = 300 ;  // it will update 1st index value from 102 to 300

			System.out.println ( arr [ 101 ] ) ;  // AIOBE ( 101 index not available in array )
	}
}
-----------------------------------------------------------------------------------------------------------------

Note: Array size should be positive integer only

-> Decimal value can't be used for Array Size

-> Negative value also can't be used for Array Size

--------------------------------------------------------------------------------------------------------------------------



1) Write a java program to find min and max elements in the array

		int arr [ ] = { 15, 8, 9, 2, 11, 4 }


============================== Program with Sort method ===============================
import java.util.*;

class ArrayDemo {
	
	public static void main(String... args) {

			int arr [ ] = { 15, 8, 9, 2, 11, 4 } ; 

			Arrays.sort(arr);

			System.out.println ("Min Element : " + arr [ 0 ] );

			System.out.println("Max Element : " + arr [ arr.length - 1 ] );	
	}
}
=========================Program without sort method=========================================
class ArrayDemo {
	
	public static void main(String... args) {

			int arr [ ] = { 15, 8, 9, 2, 11, 4 } ; 

			int min = arr [ 0 ]; 
			int max = arr [ 0 ] ; 

			for ( int i = 0 ; i < arr.length ; i++){
				if ( arr [ i ] > max ) {
					max = arr [ i ] ;
				}
				if ( arr [ i ] < min ){
					min  = arr [ i ];
				}
			}
			System.out.println ( " Min Element :: " + min );
			System.out.println (" Max Element :: " + max);
	}
}

------------------------------------------------------------------------------------------------------------------------------------

Q-2 ) Write a  java program to reverse an array ?

		int arr [ ] = { 15, 8, 9, 2, 11, 4 } ; 



class ArrayDemo {
	
	public static void main(String... args) {

			int arr [ ] = { 15, 8, 9, 2, 11, 4, 7 } ;

			int temp = 0;

			for ( int i = 0; i < arr.length / 2 ; i++ ){
				temp = arr [ i ]; 
				arr [ i ] = arr [ arr.length - 1 - i ]; 
				arr [ arr.length-1 - i ] = temp;  
			}

			for( int n : arr){
				System.out.print ( n + " " );
			}
			
	}
}

============================= Array Elements Printing - 3 ways=====================================

import java.util.Arrays;

public class ArraySorting {

	public static void main(String[] args) {

		int arr[] = { 5, 8, 2, 6, 9, 3 };

		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
		System.out.println();

		for (int x : arr) {
			System.out.print(x + " ");
		}
		System.out.println();

		System.out.println(Arrays.toString(arr));
	}

}
=========================================================================================

public class ArraySorting {

	public static void main(String[] args) {

		int arr[] = { 5, 8, 2, 6, 9, 3 };
		int temp = 0;
		
		for (int i = 0; i < arr.length; i++) {
			
			for (int j = i + 1; j < arr.length; j++) {
				if ( arr[i] < arr[j]) {
					temp = arr[i];
					arr[i] = arr[j];
					arr[j] = temp;
				}
			}
		}
		System.out.println(Arrays.toString(arr));
	}
}

=================================================
public class SumMatchingPairs {

	public static void main(String[] args) {

		int arr[] = { 3, 5, 1, 6, 2, 7, 9 };

		int sum = 8;

		for (int i = 0; i < arr.length; i++) {

			for (int j = i + 1; j < arr.length; j++) {
				if (arr[i] + arr[j] == sum) {
					System.out.println(arr[i] + "+" + arr[j] + "=" + sum);
				}
			}
		}
	}
}

=============================================================
public class NonRepeatedElements {

	public static void main(String[] args) {

		int arr[] = { 2, 3, 2, 1, 3, 4, 5 };

		for (int i = 0; i < arr.length; i++) {
			int count = 0;

			for (int j = 0; j < arr.length; j++) {
				if (arr[i] == arr[j]) {
					count++;
				}
			}
			if (count == 1) {
				System.out.print(arr[i] + " ");
			}
		}
	}
}
